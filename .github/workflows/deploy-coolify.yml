name: Deploy to Coolify

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  DOCKERHUB_USER: gordov1su4
  DOCKERHUB_REPO_PREFIX: gordov1su4/archon

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service:
          - name: server
            dockerfile: ./python/Dockerfile.server
            context: ./python
          - name: mcp
            dockerfile: ./python/Dockerfile.mcp
            context: ./python
          - name: agents
            dockerfile: ./python/Dockerfile.agents
            context: ./python
          - name: frontend
            dockerfile: ./archon-ui-main/Dockerfile
            context: ./archon-ui-main

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO_PREFIX }}-${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy-to-coolify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production  # This uses the environment we created
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Coolify via Webhook
        run: |
          curl -X POST "${{ secrets.COOLIFY_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "branch": "${{ github.ref_name }}",
              "sha": "${{ github.sha }}",
              "repository": "${{ github.repository }}",
              "trigger": "github_push"
            }'

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          # Add your health check endpoints here
          echo "Checking service health..."
          # curl -f ${{ secrets.COOLIFY_APP_URL }}/health || exit 1
