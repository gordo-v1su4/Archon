version: '3.8'

# This Docker Compose file is optimized for Coolify deployment
# It uses GitHub Container Registry images built by GitHub Actions

services:
  # PostgreSQL Database (if not using Supabase)
  # postgres:
  #   image: postgres:16-alpine
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-archon}
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./migration/complete_setup.sql:/docker-entrypoint-initdb.d/01-schema.sql
  #   networks:
  #     - archon-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    image: ghcr.io/${GITHUB_REPOSITORY:-coleam00/archon}-server:${GITHUB_SHA:-latest}
    container_name: archon-server
    ports:
      - "${ARCHON_SERVER_PORT:-8181}:${ARCHON_SERVER_PORT:-8181}"
    environment:
      # Database Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      
      # Service Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
      - SERVICE_DISCOVERY_MODE=docker_compose
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - archon-network
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${ARCHON_SERVER_PORT:-8181}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MCP Server Service
  archon-mcp:
    image: ghcr.io/${GITHUB_REPOSITORY:-coleam00/archon}-mcp:${GITHUB_SHA:-latest}
    container_name: archon-mcp
    ports:
      - "${ARCHON_MCP_PORT:-8051}:${ARCHON_MCP_PORT:-8051}"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_SERVICE_URL=http://archon-server:${ARCHON_SERVER_PORT:-8181}
      - AGENTS_SERVICE_URL=http://archon-agents:${ARCHON_AGENTS_PORT:-8052}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
    depends_on:
      - archon-server
      - archon-agents
    networks:
      - archon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${ARCHON_MCP_PORT:-8051}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agents Service
  archon-agents:
    image: ghcr.io/${GITHUB_REPOSITORY:-coleam00/archon}-agents:${GITHUB_SHA:-latest}
    container_name: archon-agents
    ports:
      - "${ARCHON_AGENTS_PORT:-8052}:${ARCHON_AGENTS_PORT:-8052}"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
    networks:
      - archon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${ARCHON_AGENTS_PORT:-8052}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend UI
  archon-frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-coleam00/archon}-frontend:${GITHUB_SHA:-latest}
    container_name: archon-ui
    ports:
      - "${ARCHON_UI_PORT:-3737}:3737"
    environment:
      - VITE_API_URL=http://${HOST:-localhost}:${ARCHON_SERVER_PORT:-8181}
      - VITE_ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - HOST=${HOST:-localhost}
    depends_on:
      - archon-server
    networks:
      - archon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  archon-network:
    driver: bridge

volumes:
  postgres_data:
